var canvas;
var gl;

var texture;
var textureAttrLoc;

var indices = []; // To keep the indices of triangle vertices
var indexedNormals = [];
var indexedTexCoords = [];

var modelViewMatrix, projectionMatrix, normalMatrix;
var modelViewMatrixLoc, projectionMatrixLoc, normalMatrixLoc;

var ambColor, difColor, specColor;
//var ambientColorLoc, diffuseColorLoc, specularColorLoc;

var ambM, difM, specM, shinM;
//var ambientReflectionLoc, diffuseReflectionLoc, specularReflectionLoc, shininess;

var lightPos;
var lightPosLoc;

var showW = false;

var startPosX = 0;
var startPosY = 0;

var mouseDownS = 0;
var rotO = 0;

function mouseDown(e)
{
	mouseDownS = 1;
	startPosX = e.clientX;
	startPosY = e.clientY;
}

function mouseUp()
{
	mouseDownS = 0;
}

function mouseDrag(e)
{
	if(mouseDownS == 0)
		return;
	
	var diffX = e.clientX - startPosX;
	var diffY = e.clientY - startPosY;
	
	//console.log("X: " + diffX + " Y: " + diffY);
	
	if(rotO == 0)
	{
		modelViewMatrix = mult(rotateX(diffY), modelViewMatrix);
		modelViewMatrix = mult(rotateY(diffX), modelViewMatrix);
		
		gl.uniformMatrix4fv( modelViewMatrixLoc, false, flatten(modelViewMatrix));
		
		normalMatrix = transpose(inverse(modelViewMatrix));
		gl.uniformMatrix4fv(normalMatrixLoc, false, flatten(normalMatrix));
	}
	else
	{
		var lastV = mult(rotateX(diffY), vec4(lightPos, 0.0));
		lastV = mult(rotateY(diffX), vec4(lastV, 0.0))

		lightPos = vec3(lastV);
		
		gl.uniform3fv(lightPosLoc, lightPos);
	}
	
	startPosX = e.clientX;
	startPosY = e.clientY;
}

// DISTORTED-CUBE DATA
var vertices = [ 
	-1.163893,-1.163893,1.163893,
	-1.163893,1.163893,1.163893,
	-1.163893,-1.163893,-1.163893,
	-1.163893,1.163893,-1.163893,
	1.163893,-1.163893,1.163893,
	1.163893,1.163893,1.163893,
	1.163893,-1.163893,-1.163893,
	1.163893,1.163893,-1.163893,
	-0.986832,-0.986832,-0.431277,
	-0.986832,-0.986832,0.431277,
	-0.986832,-0.431277,0.986832,
	-0.986832,0.431277,0.986832,
	-0.986832,0.986832,0.431277,
	-0.986832,0.986832,-0.431277,
	-0.986832,0.431277,-0.986832,
	-0.986832,-0.431277,-0.986832,
	0.431277,-0.986832,-0.986832,
	-0.431277,-0.986832,-0.986832,
	-0.431277,0.986832,-0.986832,
	0.431277,0.986832,-0.986832,
	0.986832,0.431277,-0.986832,
	0.986832,-0.431277,-0.986832,
	0.986832,-0.986832,0.431277,
	0.986832,-0.986832,-0.431277,
	0.986832,0.986832,-0.431277,
	0.986832,0.986832,0.431277,
	0.986832,0.431277,0.986832,
	0.986832,-0.431277,0.986832,
	-0.431277,-0.986832,0.986832,
	0.431277,-0.986832,0.986832,
	0.431277,0.986832,0.986832,
	-0.431277,0.986832,0.986832,
	0.357819,1.024486,-0.357819,
	0.357819,1.024486,0.357819,
	-0.357819,1.024486,-0.357819,
	-0.357819,1.024486,0.357819,
	-0.357819,-1.024486,-0.357819,
	-0.357819,-1.024486,0.357819,
	0.357819,-1.024486,-0.357819,
	0.357819,-1.024486,0.357819,
	0.357819,-0.357819,1.024486,
	-0.357819,-0.357819,1.024486,
	0.357819,0.357819,1.024486,
	-0.357819,0.357819,1.024486,
	1.024486,-0.357819,-0.357819,
	1.024486,-0.357819,0.357819,
	1.024486,0.357819,-0.357819,
	1.024486,0.357819,0.357819,
	-0.357819,-0.357819,-1.024486,
	0.357819,-0.357819,-1.024486,
	-0.357819,0.357819,-1.024486,
	0.357819,0.357819,-1.024486,
	-1.024486,-0.357819,0.357819,
	-1.024486,-0.357819,-0.357819,
	-1.024486,0.357819,0.357819,
	-1.024486,0.357819,-0.357819,
	-1.146677,-1.146676,0.912880,
	-1.146677,0.912880,1.146677,
	-1.146677,1.146677,-0.912880,
	-1.146677,-0.912880,-1.146677,
	-0.912880,-1.146677,-1.146677,
	0.912880,1.146677,-1.146677,
	1.146677,-0.912880,-1.146677,
	1.146677,-1.146677,-0.912880,
	1.146677,1.146677,0.912880,
	1.146677,-0.912880,1.146677,
	0.912880,-1.146677,1.146677,
	-0.912880,1.146677,1.146677,
	-1.146677,-1.146677,-0.912880,
	-0.913375,-0.913375,-0.000000,
	-1.146677,-0.912880,1.146677,
	-0.913375,-0.000000,0.913375,
	-1.146677,1.146677,0.912880,
	-0.913375,0.913375,-0.000000,
	-1.146677,0.912880,-1.146677,
	-0.913375,-0.000000,-0.913375,
	0.912880,-1.146677,-1.146677,
	-0.000000,-0.913375,-0.913375,
	-0.912880,1.146677,-1.146677,
	0.000000,0.913375,-0.913375,
	1.146677,0.912880,-1.146677,
	0.913375,-0.000000,-0.913375,
	1.146677,-1.146677,0.912880,
	0.913375,-0.913375,-0.000000,
	1.146677,1.146677,-0.912880,
	0.913375,0.913375,-0.000000,
	1.146677,0.912880,1.146677,
	0.913375,-0.000000,0.913375,
	-0.912880,-1.146677,1.146677,
	-0.000000,-0.913375,0.913375,
	0.912880,1.146677,1.146677,
	0.000000,0.913375,0.913375,
	0.403730,1.056508,0.723175,
	0.403730,1.056508,-0.723175,
	0.339455,1.006122,0.000000,
	-0.403730,1.056508,0.723175,
	-0.403730,1.056508,-0.723175,
	-0.339455,1.006122,0.000000,
	0.723175,1.056508,-0.403730,
	0.723175,1.056508,0.403730,
	-0.000000,1.006122,-0.339455,
	-0.000000,1.006122,0.339455,
	-0.723175,1.056508,-0.403730,
	-0.723175,1.056508,0.403730,
	-0.403730,-1.056508,0.723175,
	-0.403730,-1.056508,-0.723175,
	-0.339455,-1.006122,0.000000,
	0.403730,-1.056508,0.723175,
	0.403730,-1.056508,-0.723175,
	0.339455,-1.006122,0.000000,
	-0.723175,-1.056508,-0.403730,
	-0.723175,-1.056508,0.403730,
	0.000000,-1.006122,-0.339455,
	0.000000,-1.006122,0.339455,
	0.723175,-1.056508,-0.403730,
	0.723175,-1.056508,0.403730,
	-0.723175,-0.403730,1.056508,
	0.723175,-0.403730,1.056508,
	-0.000000,-0.339455,1.006122,
	-0.723175,0.403730,1.056508,
	0.723175,0.403730,1.056508,
	-0.000000,0.339455,1.006122,
	0.403730,-0.723175,1.056508,
	-0.403730,-0.723175,1.056508,
	0.339455,0.000000,1.006122,
	-0.339455,0.000000,1.006122,
	0.403730,0.723175,1.056508,
	-0.403730,0.723175,1.056508,
	1.056508,-0.403730,0.723175,
	1.056508,-0.403730,-0.723175,
	1.006122,-0.339455,0.000000,
	1.056508,0.403730,0.723175,
	1.056508,0.403730,-0.723175,
	1.006122,0.339455,0.000000,
	1.056508,-0.723175,-0.403730,
	1.056508,-0.723175,0.403730,
	1.006122,0.000000,-0.339455,
	1.006122,0.000000,0.339455,
	1.056508,0.723175,-0.403730,
	1.056508,0.723175,0.403730,
	0.723175,-0.403730,-1.056508,
	-0.723175,-0.403730,-1.056508,
	0.000000,-0.339455,-1.006122,
	0.723175,0.403730,-1.056508,
	-0.723175,0.403730,-1.056508,
	0.000000,0.339455,-1.006122,
	-0.403730,-0.723175,-1.056508,
	0.403730,-0.723175,-1.056508,
	-0.339455,0.000000,-1.006122,
	0.339455,0.000000,-1.006122,
	-0.403730,0.723175,-1.056508,
	0.403730,0.723175,-1.056508,
	-1.056508,-0.403730,-0.723175,
	-1.056508,-0.403730,0.723175,
	-1.006122,-0.339455,-0.000000,
	-1.056508,0.403730,-0.723175,
	-1.056508,0.403730,0.723175,
	-1.006122,0.339455,-0.000000,
	-1.056508,-0.723175,0.403730,
	-1.056508,-0.723175,-0.403730,
	-1.006122,0.000000,0.339455,
	-1.006122,0.000000,-0.339455,
	-1.056508,0.723175,0.403730,
	-1.056508,0.723175,-0.403730,
	-1.171557,0.849798,-0.849798,
	0.849798,0.849798,-1.171557,
	1.171557,0.849798,0.849798,
	-0.849798,0.849798,1.171557,
	0.849798,-1.171557,0.849798,
	-0.849798,1.171557,0.849798,
	0.849798,1.171557,0.849798,
	-0.000000,1.003710,0.670377,
	0.849798,1.171557,-0.849798,
	0.670377,1.003710,0.000000,
	-0.000000,1.003711,-0.670377,
	-0.000000,1.001530,-0.000000,
	-0.849798,1.171557,-0.849798,
	-0.670377,1.003711,0.000000,
	-0.849798,-1.171557,0.849798,
	0.000000,-1.003710,0.670377,
	-0.849798,-1.171557,-0.849798,
	-0.670377,-1.003710,0.000000,
	0.000000,-1.003711,-0.670377,
	0.000000,-1.001530,-0.000000,
	0.849798,-1.171557,-0.849798,
	0.670377,-1.003711,0.000000,
	-0.849798,-0.849798,1.171557,
	-0.670377,0.000000,1.003710,
	0.849798,-0.849798,1.171557,
	-0.000000,-0.670377,1.003710,
	0.670377,0.000000,1.003711,
	0.000000,0.000000,1.001530,
	0.849798,0.849798,1.171557,
	-0.000000,0.670377,1.003711,
	1.171557,-0.849798,0.849798,
	1.003710,0.000000,0.670377,
	1.171557,-0.849798,-0.849798,
	1.003710,-0.670377,0.000000,
	1.003711,0.000000,-0.670377,
	1.001530,0.000000,-0.000000,
	1.171557,0.849798,-0.849798,
	1.003711,0.670377,0.000000,
	0.849798,-0.849798,-1.171557,
	0.670377,0.000000,-1.003710,
	-0.849798,-0.849798,-1.171557,
	0.000000,-0.670377,-1.003710,
	-0.670377,0.000000,-1.003711,
	-0.000000,0.000000,-1.001530,
	-0.849798,0.849798,-1.171557,
	0.000000,0.670377,-1.003711,
	-1.171557,-0.849798,-0.849798,
	-1.003710,0.000000,-0.670377,
	-1.171557,-0.849798,0.849798,
	-1.003710,-0.670377,-0.000000,
	-1.003711,0.000000,0.670377,
	-1.001530,0.000000,0.000000,
	-1.171557,0.849798,0.849798,
	-1.003711,0.670377,-0.000000
]; 

var texcoords = [
0.808638,0.327695,
0.672305,0.191362,
0.652711,0.347289,
0.921163,0.315939,
0.862679,0.137321,
0.989382,0.110399,
0.889601,0.010618,
0.684061,0.078837,
0.672305,0.808638,
0.808638,0.672305,
0.652711,0.652711,
0.684061,0.921163,
0.862679,0.862679,
0.889601,0.989382,
0.989382,0.889601,
0.921163,0.684061,
0.808638,0.672305,
0.672305,0.808638,
0.652711,0.652711,
0.921163,0.684061,
0.862679,0.862679,
0.989382,0.889601,
0.889601,0.989382,
0.684061,0.921163,
0.327695,0.808638,
0.191362,0.672305,
0.347289,0.652711,
0.315939,0.921163,
0.137321,0.862679,
0.110399,0.989382,
0.010618,0.889601,
0.078837,0.684061,
0.808638,0.672305,
0.672305,0.808638,
0.652711,0.652711,
0.921163,0.684061,
0.862679,0.862679,
0.989382,0.889601,
0.889601,0.989382,
0.684061,0.921163,
0.191362,0.672305,
0.327695,0.808638,
0.347289,0.652711,
0.078837,0.684061,
0.137321,0.862679,
0.010618,0.889601,
0.862679,0.862679,
0.808638,0.672305,
0.672305,0.808638,
0.684061,0.921163,
0.889601,0.989382,
0.996729,0.996729,
0.652711,0.652711,
0.500000,0.786105,
0.500000,0.644873,
0.500000,0.889812,
0.889601,0.010618,
0.989382,0.110399,
0.996729,0.003271,
0.684061,0.078837,
0.862679,0.137321,
0.672305,0.191362,
0.808638,0.327695,
0.921163,0.315939,
0.889812,0.500000,
0.652711,0.347289,
0.786105,0.500000,
0.500000,0.110188,
0.327695,0.191362,
0.500000,0.213895,
0.347289,0.347289,
0.500000,0.355127,
0.644873,0.500000,
0.355127,0.500000,
0.500000,0.500000,
0.315939,0.078837,
0.137321,0.137321,
0.110399,0.010618,
0.010618,0.110399,
0.078837,0.315939,
0.191362,0.327695,
0.213895,0.500000,
0.110188,0.500000,
0.078837,0.684061,
0.137321,0.862679,
0.010618,0.889601,
0.191362,0.672305,
0.327695,0.808638,
0.315939,0.921163,
0.110399,0.989382,
0.003271,0.996729,
0.347289,0.652711,
0.500000,0.786105,
0.500000,0.644873,
0.500000,0.889812,
0.110399,0.010618,
0.010618,0.110399,
0.003271,0.003271,
0.315939,0.078837,
0.137321,0.137321,
0.327695,0.191362,
0.191362,0.327695,
0.078837,0.315939,
0.110188,0.500000,
0.347289,0.347289,
0.213895,0.500000,
0.500000,0.110188,
0.672305,0.191362,
0.500000,0.213895,
0.652711,0.347289,
0.500000,0.355127,
0.355127,0.500000,
0.644873,0.500000,
0.500000,0.500000,
0.684061,0.078837,
0.862679,0.137321,
0.889601,0.010618,
0.989382,0.110399,
0.921163,0.315939,
0.808638,0.327695,
0.786105,0.500000,
0.889812,0.500000,
0.315939,0.078837,
0.137321,0.137321,
0.110399,0.010618,
0.327695,0.191362,
0.191362,0.327695,
0.078837,0.315939,
0.010618,0.110399,
0.003271,0.003271,
0.347289,0.347289,
0.213895,0.500000,
0.355127,0.500000,
0.110188,0.500000,
0.989382,0.110399,
0.889601,0.010618,
0.996729,0.003271,
0.921163,0.315939,
0.862679,0.137321,
0.808638,0.327695,
0.672305,0.191362,
0.684061,0.078837,
0.500000,0.110188,
0.652711,0.347289,
0.500000,0.213895,
0.889812,0.500000,
0.808638,0.672305,
0.786105,0.500000,
0.652711,0.652711,
0.644873,0.500000,
0.500000,0.355127,
0.500000,0.644873,
0.500000,0.500000,
0.921163,0.684061,
0.862679,0.862679,
0.989382,0.889601,
0.672305,0.808638,
0.500000,0.786105,
0.078837,0.684061,
0.137321,0.862679,
0.010618,0.889601,
0.191362,0.672305,
0.327695,0.808638,
0.315939,0.921163,
0.110399,0.989382,
0.003271,0.996729,
0.347289,0.652711,
0.500000,0.786105,
0.500000,0.644873,
0.500000,0.889812,
0.110399,0.010618,
0.010618,0.110399,
0.003271,0.003271,
0.315939,0.078837,
0.137321,0.137321,
0.327695,0.191362,
0.191362,0.327695,
0.078837,0.315939,
0.110188,0.500000,
0.347289,0.347289,
0.213895,0.500000,
0.500000,0.110188,
0.672305,0.191362,
0.500000,0.213895,
0.652711,0.347289,
0.500000,0.355127,
0.355127,0.500000,
0.644873,0.500000,
0.500000,0.500000,
0.684061,0.078837,
0.862679,0.137321,
0.889601,0.010618,
0.808638,0.327695,
0.786105,0.500000,
0.862679,0.137321,
0.672305,0.191362,
0.808638,0.327695,
0.921163,0.315939,
0.989382,0.110399,
0.996729,0.003271,
0.652711,0.347289,
0.786105,0.500000,
0.644873,0.500000,
0.889812,0.500000,
0.010618,0.110399,
0.078837,0.315939,
0.137321,0.137321,
0.191362,0.327695,
0.327695,0.191362,
0.347289,0.347289,
0.500000,0.213895,
0.110188,0.500000,
0.191362,0.672305,
0.213895,0.500000,
0.347289,0.652711,
0.355127,0.500000,
0.500000,0.355127,
0.500000,0.644873,
0.500000,0.500000,
0.078837,0.684061,
0.137321,0.862679,
0.010618,0.889601,
0.110399,0.989382,
0.315939,0.921163,
0.327695,0.808638,
0.500000,0.786105,
0.500000,0.889812,
0.137321,0.137321,
0.191362,0.327695,
0.327695,0.191362,
0.315939,0.078837,
0.110399,0.010618,
0.347289,0.347289,
0.500000,0.213895,
0.500000,0.355127,
0.500000,0.110188,
0.110399,0.989382,
0.315939,0.921163,
0.137321,0.862679,
0.327695,0.808638,
0.191362,0.672305,
0.347289,0.652711,
0.213895,0.500000,
0.500000,0.889812,
0.672305,0.808638,
0.500000,0.786105,
0.652711,0.652711,
0.500000,0.644873,
0.355127,0.500000,
0.644873,0.500000,
0.500000,0.500000,
0.684061,0.921163,
0.862679,0.862679,
0.889601,0.989382,
0.989382,0.889601,
0.921163,0.684061,
0.808638,0.672305,
0.786105,0.500000,
0.889812,0.500000,
0.996729,0.003271,
0.996729,0.996729,
0.003271,0.996729,
0.996729,0.996729,
0.003271,0.003271,
0.003271,0.996729,
0.996729,0.996729
];

var normals = [ 
	-0.9940,-0.0774,0.0774,
	-0.9099,0.2731,0.3122,
	-0.9953,0.0688,-0.0688,
	-0.9099,-0.3122,-0.2731,
	-0.0774,-0.0774,-0.9940,
	-0.3122,0.2731,-0.9099,
	0.0688,0.0688,-0.9953,
	0.2731,-0.3122,-0.9099,
	0.9940,-0.0774,-0.0774,
	0.9099,0.2731,-0.3122,
	0.9953,0.0688,0.0688,
	0.9099,-0.3122,0.2731,
	0.0774,-0.0774,0.9940,
	0.3122,0.2731,0.9099,
	-0.0688,0.0688,0.9953,
	-0.2731,-0.3122,0.9099,
	-0.0774,-0.9940,-0.0774,
	0.2731,-0.9099,-0.3122,
	0.0688,-0.9953,0.0688,
	-0.3122,-0.9099,0.2731,
	0.0774,0.9940,-0.0774,
	-0.2731,0.9099,-0.3122,
	-0.0688,0.9953,0.0688,
	0.3122,0.9099,0.2731,
	0.1530,0.9216,-0.3567,
	-0.1932,0.9619,-0.1932,
	-0.3567,0.9216,0.1530,
	-0.0639,0.9959,-0.0639,
	-0.1201,0.9902,-0.0717,
	0.0516,0.9986,0.0073,
	0.1658,0.9243,0.3436,
	-0.2062,0.9405,0.2701,
	-0.0639,0.9959,0.0639,
	-0.3567,0.9216,-0.1530,
	-0.1932,0.9619,0.1932,
	0.1530,0.9216,0.3567,
	0.2701,0.9405,0.2062,
	-0.0717,0.9902,0.1201,
	-0.0717,0.9902,-0.1201,
	0.2701,0.9405,-0.2062,
	-0.2062,0.9405,-0.2701,
	0.1658,0.9243,-0.3436,
	0.0516,0.9986,-0.0073,
	-0.1201,0.9902,0.0717,
	-0.0487,0.9976,0.0487,
	0.0135,0.9998,0.0135,
	0.0135,0.9998,-0.0135,
	-0.0487,0.9976,-0.0487,
	0.3122,0.9099,-0.2731,
	-0.0688,0.9953,-0.0688,
	-0.2731,0.9099,0.3122,
	0.0774,0.9940,0.0774,
	-0.0073,0.9986,0.0516,
	-0.3436,0.9243,0.1658,
	-0.3436,0.9243,-0.1658,
	-0.0073,0.9986,-0.0516,
	-0.1530,-0.9216,-0.3567,
	0.1932,-0.9619,-0.1932,
	0.3567,-0.9216,0.1530,
	0.0639,-0.9959,-0.0639,
	0.1201,-0.9902,-0.0717,
	-0.0516,-0.9986,0.0073,
	-0.1658,-0.9243,0.3436,
	0.2062,-0.9405,0.2701,
	0.0639,-0.9959,0.0639,
	0.3567,-0.9216,-0.1530,
	0.1932,-0.9619,0.1932,
	-0.1530,-0.9216,0.3567,
	-0.2701,-0.9405,0.2062,
	0.0717,-0.9902,0.1201,
	0.0717,-0.9902,-0.1201,
	-0.2701,-0.9405,-0.2062,
	0.2062,-0.9405,-0.2701,
	-0.1658,-0.9243,-0.3436,
	-0.0516,-0.9986,-0.0073,
	0.1201,-0.9902,0.0717,
	0.0487,-0.9976,0.0487,
	-0.0135,-0.9998,0.0135,
	-0.0135,-0.9998,-0.0135,
	0.0487,-0.9976,-0.0487,
	-0.3122,-0.9099,-0.2731,
	0.0688,-0.9953,-0.0688,
	0.2731,-0.9099,0.3122,
	-0.0774,-0.9940,0.0774,
	0.0073,-0.9986,0.0516,
	0.3436,-0.9243,0.1658,
	0.3436,-0.9243,-0.1658,
	0.0073,-0.9986,-0.0516,
	0.3567,-0.1530,0.9216,
	0.1932,0.1932,0.9619,
	-0.1530,0.3567,0.9216,
	0.0639,0.0639,0.9959,
	0.0717,0.1201,0.9902,
	-0.0073,-0.0516,0.9986,
	-0.3436,-0.1658,0.9243,
	-0.2701,0.2062,0.9405,
	-0.0639,0.0639,0.9959,
	0.1530,0.3567,0.9216,
	-0.1932,0.1932,0.9619,
	-0.3567,-0.1530,0.9216,
	-0.2062,-0.2701,0.9405,
	-0.1201,0.0717,0.9902,
	0.1201,0.0717,0.9902,
	0.2062,-0.2701,0.9405,
	0.2701,0.2062,0.9405,
	0.3436,-0.1658,0.9243,
	0.0073,-0.0516,0.9986,
	-0.0717,0.1201,0.9902,
	-0.0487,0.0487,0.9976,
	-0.0135,-0.0135,0.9998,
	0.0135,-0.0135,0.9998,
	0.0487,0.0487,0.9976,
	0.2731,-0.3122,0.9099,
	0.0688,0.0688,0.9953,
	-0.3122,0.2731,0.9099,
	-0.0774,-0.0774,0.9940,
	-0.0516,0.0073,0.9986,
	-0.1658,0.3436,0.9243,
	0.1658,0.3436,0.9243,
	0.0516,0.0073,0.9986,
	0.9216,-0.1530,-0.3567,
	0.9619,0.1932,-0.1932,
	0.9216,0.3567,0.1530,
	0.9959,0.0639,-0.0639,
	0.9902,0.1201,-0.0717,
	0.9986,-0.0516,0.0073,
	0.9243,-0.1658,0.3436,
	0.9405,0.2062,0.2701,
	0.9959,0.0639,0.0639,
	0.9216,0.3567,-0.1530,
	0.9619,0.1932,0.1932,
	0.9216,-0.1530,0.3567,
	0.9405,-0.2701,0.2062,
	0.9902,0.0717,0.1201,
	0.9902,0.0717,-0.1201,
	0.9405,-0.2701,-0.2062,
	0.9405,0.2062,-0.2701,
	0.9243,-0.1658,-0.3436,
	0.9986,-0.0516,-0.0073,
	0.9902,0.1201,0.0717,
	0.9976,0.0487,0.0487,
	0.9998,-0.0135,0.0135,
	0.9998,-0.0135,-0.0135,
	0.9976,0.0487,-0.0487,
	0.9099,-0.3122,-0.2731,
	0.9953,0.0688,-0.0688,
	0.9099,0.2731,0.3122,
	0.9940,-0.0774,0.0774,
	0.9986,0.0073,0.0516,
	0.9243,0.3436,0.1658,
	0.9243,0.3436,-0.1658,
	0.9986,0.0073,-0.0516,
	-0.3567,-0.1530,-0.9216,
	-0.1932,0.1932,-0.9619,
	0.1530,0.3567,-0.9216,
	-0.0639,0.0639,-0.9959,
	-0.0717,0.1201,-0.9902,
	0.0073,-0.0516,-0.9986,
	0.3436,-0.1658,-0.9243,
	0.2701,0.2062,-0.9405,
	0.0639,0.0639,-0.9959,
	-0.1530,0.3567,-0.9216,
	0.1932,0.1932,-0.9619,
	0.3567,-0.1530,-0.9216,
	0.2062,-0.2701,-0.9405,
	0.1201,0.0717,-0.9902,
	-0.1201,0.0717,-0.9902,
	-0.2062,-0.2701,-0.9405,
	-0.2701,0.2062,-0.9405,
	-0.3436,-0.1658,-0.9243,
	-0.0073,-0.0516,-0.9986,
	0.0717,0.1201,-0.9902,
	0.0487,0.0487,-0.9976,
	0.0135,-0.0135,-0.9998,
	-0.0135,-0.0135,-0.9998,
	-0.0487,0.0487,-0.9976,
	-0.2731,-0.3122,-0.9099,
	-0.0688,0.0688,-0.9953,
	0.3122,0.2731,-0.9099,
	0.0774,-0.0774,-0.9940,
	0.0516,0.0073,-0.9986,
	0.1658,0.3436,-0.9243,
	-0.1658,0.3436,-0.9243,
	-0.0516,0.0073,-0.9986,
	-0.9216,-0.1530,0.3567,
	-0.9619,0.1932,0.1932,
	-0.9216,0.3567,-0.1530,
	-0.9959,0.0639,0.0639,
	-0.9902,0.1201,0.0717,
	-0.9986,-0.0516,-0.0073,
	-0.9243,-0.1658,-0.3436,
	-0.9405,0.2062,-0.2701,
	-0.9959,0.0639,-0.0639,
	-0.9216,0.3567,0.1530,
	-0.9619,0.1932,-0.1932,
	-0.9216,-0.1530,-0.3567,
	-0.9405,-0.2701,-0.2062,
	-0.9902,0.0717,-0.1201,
	-0.9902,0.0717,0.1201,
	-0.9405,-0.2701,0.2062,
	-0.9405,0.2062,0.2701,
	-0.9243,-0.1658,0.3436,
	-0.9986,-0.0516,0.0073,
	-0.9902,0.1201,-0.0717,
	-0.9976,0.0487,-0.0487,
	-0.9998,-0.0135,-0.0135,
	-0.9998,-0.0135,0.0135,
	-0.9976,0.0487,0.0487,
	-0.9099,-0.3122,0.2731,
	-0.9953,0.0688,0.0688,
	-0.9099,0.2731,-0.3122,
	-0.9940,-0.0774,-0.0774,
	-0.9986,0.0073,-0.0516,
	-0.9243,0.3436,-0.1658,
	-0.9243,0.3436,0.1658,
	-0.9986,0.0073,0.0516,
	-0.9619,-0.1932,0.1932,
	-0.9216,0.1530,0.3567,
	-0.9959,-0.0639,0.0639,
	-0.9216,-0.3567,-0.1530,
	-0.1932,-0.1932,-0.9619,
	-0.3567,0.1530,-0.9216,
	-0.0639,-0.0639,-0.9959,
	0.1530,-0.3567,-0.9216,
	0.9619,-0.1932,-0.1932,
	0.9216,0.1530,-0.3567,
	0.9959,-0.0639,-0.0639,
	0.9216,-0.3567,0.1530,
	0.1932,-0.1932,0.9619,
	0.3567,0.1530,0.9216,
	0.0639,-0.0639,0.9959,
	-0.1530,-0.3567,0.9216,
	-0.1932,-0.9619,-0.1932,
	0.1530,-0.9216,-0.3567,
	-0.0639,-0.9959,-0.0639,
	-0.3567,-0.9216,0.1530,
	0.1932,0.9619,-0.1932,
	-0.1530,0.9216,-0.3567,
	0.0639,0.9959,-0.0639,
	0.3567,0.9216,0.1530,
	0.2731,0.9099,-0.3122,
	-0.0774,0.9940,-0.0774,
	-0.3122,0.9099,0.2731,
	0.0688,0.9953,0.0688,
	-0.0516,0.9986,0.0073,
	0.1201,0.9902,-0.0717,
	0.2062,0.9405,0.2701,
	-0.1658,0.9243,0.3436,
	0.0688,0.9953,-0.0688,
	-0.3122,0.9099,-0.2731,
	-0.0774,0.9940,0.0774,
	0.2731,0.9099,0.3122,
	0.3436,0.9243,0.1658,
	0.0073,0.9986,0.0516,
	0.0073,0.9986,-0.0516,
	0.3436,0.9243,-0.1658,
	-0.1658,0.9243,-0.3436,
	0.2062,0.9405,-0.2701,
	0.1201,0.9902,0.0717,
	-0.0516,0.9986,-0.0073,
	-0.0135,0.9998,0.0135,
	0.0487,0.9976,0.0487,
	0.0487,0.9976,-0.0487,
	-0.0135,0.9998,-0.0135,
	0.3567,0.9216,-0.1530,
	0.0639,0.9959,0.0639,
	-0.1530,0.9216,0.3567,
	0.1932,0.9619,0.1932,
	0.0717,0.9902,0.1201,
	-0.2701,0.9405,0.2062,
	-0.2701,0.9405,-0.2062,
	0.0717,0.9902,-0.1201,
	-0.2731,-0.9099,-0.3122,
	0.0774,-0.9940,-0.0774,
	0.3122,-0.9099,0.2731,
	-0.0688,-0.9953,0.0688,
	0.0516,-0.9986,0.0073,
	-0.1201,-0.9902,-0.0717,
	-0.2062,-0.9405,0.2701,
	0.1658,-0.9243,0.3436,
	-0.0688,-0.9953,-0.0688,
	0.3122,-0.9099,-0.2731,
	0.0774,-0.9940,0.0774,
	-0.2731,-0.9099,0.3122,
	-0.3436,-0.9243,0.1658,
	-0.0073,-0.9986,0.0516,
	-0.0073,-0.9986,-0.0516,
	-0.3436,-0.9243,-0.1658,
	0.1658,-0.9243,-0.3436,
	-0.2062,-0.9405,-0.2701,
	-0.1201,-0.9902,0.0717,
	0.0516,-0.9986,-0.0073,
	0.0135,-0.9998,0.0135,
	-0.0487,-0.9976,0.0487,
	-0.0487,-0.9976,-0.0487,
	0.0135,-0.9998,-0.0135,
	-0.3567,-0.9216,-0.1530,
	-0.0639,-0.9959,0.0639,
	0.1530,-0.9216,0.3567,
	-0.1932,-0.9619,0.1932,
	-0.0717,-0.9902,0.1201,
	0.2701,-0.9405,0.2062,
	0.2701,-0.9405,-0.2062,
	-0.0717,-0.9902,-0.1201,
	0.3122,-0.2731,0.9099,
	0.0774,0.0774,0.9940,
	-0.2731,0.3122,0.9099,
	-0.0688,-0.0688,0.9953,
	-0.0073,0.0516,0.9986,
	0.0717,-0.1201,0.9902,
	-0.2701,-0.2062,0.9405,
	-0.3436,0.1658,0.9243,
	0.0688,-0.0688,0.9953,
	0.2731,0.3122,0.9099,
	-0.0774,0.0774,0.9940,
	-0.3122,-0.2731,0.9099,
	-0.1658,-0.3436,0.9243,
	-0.0516,-0.0073,0.9986,
	0.0516,-0.0073,0.9986,
	0.1658,-0.3436,0.9243,
	0.3436,0.1658,0.9243,
	0.2701,-0.2062,0.9405,
	-0.0717,-0.1201,0.9902,
	0.0073,0.0516,0.9986,
	-0.0135,0.0135,0.9998,
	-0.0487,-0.0487,0.9976,
	0.0487,-0.0487,0.9976,
	0.0135,0.0135,0.9998,
	0.1530,-0.3567,0.9216,
	-0.0639,-0.0639,0.9959,
	-0.3567,0.1530,0.9216,
	-0.1932,-0.1932,0.9619,
	-0.1201,-0.0717,0.9902,
	-0.2062,0.2701,0.9405,
	0.2062,0.2701,0.9405,
	0.1201,-0.0717,0.9902,
	0.9099,-0.2731,-0.3122,
	0.9940,0.0774,-0.0774,
	0.9099,0.3122,0.2731,
	0.9953,-0.0688,0.0688,
	0.9986,0.0516,0.0073,
	0.9902,-0.1201,-0.0717,
	0.9405,-0.2062,0.2701,
	0.9243,0.1658,0.3436,
	0.9953,-0.0688,-0.0688,
	0.9099,0.3122,-0.2731,
	0.9940,0.0774,0.0774,
	0.9099,-0.2731,0.3122,
	0.9243,-0.3436,0.1658,
	0.9986,-0.0073,0.0516,
	0.9986,-0.0073,-0.0516,
	0.9243,-0.3436,-0.1658,
	0.9243,0.1658,-0.3436,
	0.9405,-0.2062,-0.2701,
	0.9902,-0.1201,0.0717,
	0.9986,0.0516,-0.0073,
	0.9998,0.0135,0.0135,
	0.9976,-0.0487,0.0487,
	0.9976,-0.0487,-0.0487,
	0.9998,0.0135,-0.0135,
	0.9216,-0.3567,-0.1530,
	0.9959,-0.0639,0.0639,
	0.9216,0.1530,0.3567,
	0.9619,-0.1932,0.1932,
	0.9902,-0.0717,0.1201,
	0.9405,0.2701,0.2062,
	0.9405,0.2701,-0.2062,
	0.9902,-0.0717,-0.1201,
	-0.3122,-0.2731,-0.9099,
	-0.0774,0.0774,-0.9940,
	0.2731,0.3122,-0.9099,
	0.0688,-0.0688,-0.9953,
	0.0073,0.0516,-0.9986,
	-0.0717,-0.1201,-0.9902,
	0.2701,-0.2062,-0.9405,
	0.3436,0.1658,-0.9243,
	-0.0688,-0.0688,-0.9953,
	-0.2731,0.3122,-0.9099,
	0.0774,0.0774,-0.9940,
	0.3122,-0.2731,-0.9099,
	0.1658,-0.3436,-0.9243,
	0.0516,-0.0073,-0.9986,
	-0.0516,-0.0073,-0.9986,
	-0.1658,-0.3436,-0.9243,
	-0.3436,0.1658,-0.9243,
	-0.2701,-0.2062,-0.9405,
	0.0717,-0.1201,-0.9902,
	-0.0073,0.0516,-0.9986,
	0.0135,0.0135,-0.9998,
	0.0487,-0.0487,-0.9976,
	-0.0487,-0.0487,-0.9976,
	-0.0135,0.0135,-0.9998,
	-0.1530,-0.3567,-0.9216,
	0.0639,-0.0639,-0.9959,
	0.3567,0.1530,-0.9216,
	0.1932,-0.1932,-0.9619,
	0.1201,-0.0717,-0.9902,
	0.2062,0.2701,-0.9405,
	-0.2062,0.2701,-0.9405,
	-0.1201,-0.0717,-0.9902,
	-0.9099,-0.2731,0.3122,
	-0.9940,0.0774,0.0774,
	-0.9099,0.3122,-0.2731,
	-0.9953,-0.0688,-0.0688,
	-0.9986,0.0516,-0.0073,
	-0.9902,-0.1201,0.0717,
	-0.9405,-0.2062,-0.2701,
	-0.9243,0.1658,-0.3436,
	-0.9953,-0.0688,0.0688,
	-0.9099,0.3122,0.2731,
	-0.9940,0.0774,-0.0774,
	-0.9099,-0.2731,-0.3122,
	-0.9243,-0.3436,-0.1658,
	-0.9986,-0.0073,-0.0516,
	-0.9986,-0.0073,0.0516,
	-0.9243,-0.3436,0.1658,
	-0.9243,0.1658,0.3436,
	-0.9405,-0.2062,0.2701,
	-0.9902,-0.1201,-0.0717,
	-0.9986,0.0516,0.0073,
	-0.9998,0.0135,-0.0135,
	-0.9976,-0.0487,-0.0487,
	-0.9976,-0.0487,0.0487,
	-0.9998,0.0135,0.0135,
	-0.9216,-0.3567,0.1530,
	-0.9959,-0.0639,-0.0639,
	-0.9216,0.1530,-0.3567,
	-0.9619,-0.1932,-0.1932,
	-0.9902,-0.0717,-0.1201,
	-0.9405,0.2701,-0.2062,
	-0.9405,0.2701,0.2062,
	-0.9902,-0.0717,0.1201
];

var triangles = [
// indices for vertex1, textureCoord of vertex1, normal of vertex1, vertex2, ...
// each index starts from 1, we will probably need to subtract 1 from each
	164,1,1,156,2,1,56,3,1,
	14,4,2,165,5,2,164,1,2,
	59,6,3,75,7,3,165,5,3,
	165,5,4,15,8,4,156,2,4,
	152,9,5,144,10,5,52,11,5,
	20,12,6,166,13,6,152,9,6,
	62,14,7,81,15,7,166,13,7,
	166,13,8,21,16,8,144,10,8,
	140,17,9,132,18,9,48,19,9,
	26,20,10,167,21,10,140,17,10,
	65,22,11,87,23,11,167,21,11,
	167,21,12,27,24,12,132,18,12,
	128,25,13,120,26,13,44,27,13,
	32,28,14,168,29,14,128,25,14,
	68,30,15,58,31,15,168,29,15,
	168,29,16,12,32,16,120,26,16,
	116,33,17,108,34,17,40,35,17,
	23,36,18,169,37,18,116,33,18,
	83,38,19,67,39,19,169,37,19,
	169,37,20,30,40,20,108,34,20,
	104,41,21,96,42,21,36,43,21,
	13,44,22,170,45,22,104,41,22,
	73,46,23,68,47,23,170,45,23,
	170,45,24,32,48,24,96,42,24,
	26,20,25,171,49,25,65,22,25,
	100,50,26,93,51,26,171,49,26,
	171,49,27,31,52,27,91,53,27,
	65,22,28,91,53,28,6,54,28,
	34,55,29,172,56,29,93,51,29,
	36,43,30,172,56,30,102,57,30,
	96,42,31,92,58,31,172,56,31,
	93,51,32,92,58,32,31,52,32,
	62,59,33,85,60,33,8,61,33,
	20,62,34,173,63,34,62,59,34,
	94,64,35,99,65,35,173,63,35,
	173,63,36,25,66,36,85,60,36,
	99,65,37,86,67,37,25,66,37,
	33,68,38,174,69,38,99,65,38,
	174,69,39,34,55,39,100,50,39,
	86,67,40,100,50,40,26,20,40,
	80,70,41,94,64,41,20,62,41,
	80,70,42,97,71,42,175,72,42,
	175,72,43,35,73,43,101,74,43,
	175,72,44,33,68,44,94,64,44,
	101,74,45,95,75,45,33,68,45,
	101,74,46,98,76,46,176,77,46,
	98,76,47,102,57,47,176,77,47,
	95,75,48,102,57,48,34,55,48,
	19,78,49,177,79,49,97,71,49,
	79,80,50,59,81,50,177,79,50,
	177,79,51,14,82,51,103,83,51,
	97,71,52,103,83,52,35,73,52,
	35,73,53,178,84,53,98,76,53,
	103,83,54,74,85,54,178,84,54,
	74,85,55,104,41,55,178,84,55,
	178,84,56,36,43,56,98,76,56,
	10,86,57,179,87,57,57,88,57,
	112,89,58,105,90,58,179,87,58,
	179,87,59,29,91,59,89,92,59,
	57,88,60,89,92,60,1,93,60,
	38,94,61,180,95,61,105,90,61,
	40,35,62,180,95,62,114,96,62,
	108,34,63,90,97,63,180,95,63,
	105,90,64,90,97,64,29,91,64,
	61,98,65,69,99,65,3,100,65,
	18,101,66,181,102,66,61,98,66,
	106,103,67,111,104,67,181,102,67,
	181,102,68,9,105,68,69,99,68,
	111,104,69,70,106,69,9,105,69,
	37,107,70,182,108,70,111,104,70,
	182,108,71,38,94,71,112,89,71,
	70,106,72,112,89,72,10,86,72,
	78,109,73,106,103,73,18,101,73,
	78,109,74,109,110,74,183,111,74,
	183,111,75,39,112,75,113,113,75,
	183,111,76,37,107,76,106,103,76,
	113,113,77,107,114,77,37,107,77,
	113,113,78,110,115,78,184,116,78,
	110,115,79,114,96,79,184,116,79,
	107,114,80,114,96,80,38,94,80,
	17,117,81,185,118,81,109,110,81,
	77,119,82,64,120,82,185,118,82,
	185,118,83,24,121,83,115,122,83,
	109,110,84,115,122,84,39,112,84,
	39,112,85,186,123,85,110,115,85,
	115,122,86,84,124,86,186,123,86,
	84,124,87,116,33,87,186,123,87,
	186,123,88,40,35,88,110,115,88,
	29,125,89,187,126,89,89,127,89,
	124,128,90,117,129,90,187,126,90,
	187,126,91,11,130,91,71,131,91,
	89,127,92,71,131,92,1,132,92,
	42,133,93,188,134,93,117,129,93,
	44,27,94,188,134,94,126,135,94,
	120,26,95,72,136,95,188,134,95,
	117,129,96,72,136,96,11,130,96,
	66,137,97,67,138,97,5,139,97,
	28,140,98,189,141,98,66,137,98,
	118,142,99,123,143,99,189,141,99,
	189,141,100,30,144,100,67,138,100,
	123,143,101,90,145,101,30,144,101,
	41,146,102,190,147,102,123,143,102,
	190,147,103,42,133,103,124,128,103,
	90,145,104,124,128,104,29,125,104,
	88,148,105,118,142,105,28,140,105,
	88,148,106,121,149,106,191,150,106,
	191,150,107,43,151,107,125,152,107,
	191,150,108,41,146,108,118,142,108,
	125,152,109,119,153,109,41,146,109,
	125,152,110,122,154,110,192,155,110,
	122,154,111,126,135,111,192,155,111,
	119,153,112,126,135,112,42,133,112,
	27,24,113,193,156,113,121,149,113,
	87,23,114,91,157,114,193,156,114,
	193,156,115,31,158,115,127,159,115,
	121,149,116,127,159,116,43,151,116,
	43,151,117,194,160,117,122,154,117,
	127,159,118,92,161,118,194,160,118,
	92,161,119,128,25,119,194,160,119,
	194,160,120,44,27,120,122,154,120,
	23,36,121,195,162,121,83,38,121,
	136,163,122,129,164,122,195,162,122,
	195,162,123,28,140,123,66,137,123,
	83,38,124,66,137,124,5,139,124,
	46,165,125,196,166,125,129,164,125,
	48,19,126,196,166,126,138,167,126,
	132,18,127,88,148,127,196,166,127,
	129,164,128,88,148,128,28,140,128,
	63,168,129,64,120,129,7,169,129,
	22,170,130,197,171,130,63,168,130,
	130,172,131,135,173,131,197,171,131,
	197,171,132,24,121,132,64,120,132,
	135,173,133,84,124,133,24,121,133,
	45,174,134,198,175,134,135,173,134,
	198,175,135,46,165,135,136,163,135,
	84,124,136,136,163,136,23,36,136,
	82,176,137,130,172,137,22,170,137,
	82,176,138,133,177,138,199,178,138,
	199,178,139,47,179,139,137,180,139,
	199,178,140,45,174,140,130,172,140,
	137,180,141,131,181,141,45,174,141,
	137,180,142,134,182,142,200,183,142,
	134,182,143,138,167,143,200,183,143,
	131,181,144,138,167,144,46,165,144,
	21,16,145,201,184,145,133,177,145,
	81,15,146,85,60,146,201,184,146,
	201,184,147,25,66,147,139,185,147,
	133,177,148,139,185,148,47,179,148,
	47,179,149,202,186,149,134,182,149,
	139,185,150,86,67,150,202,186,150,
	86,67,151,140,17,151,202,186,151,
	202,186,152,48,19,152,134,182,152,
	17,187,153,203,188,153,77,189,153,
	148,190,154,141,191,154,203,188,154,
	203,188,155,22,170,155,63,168,155,
	77,189,156,63,168,156,7,169,156,
	50,192,157,204,193,157,141,191,157,
	52,11,158,204,193,158,150,194,158,
	144,10,159,82,176,159,204,193,159,
	141,191,160,82,176,160,22,170,160,
	60,195,161,61,196,161,3,197,161,
	16,198,162,205,199,162,60,195,162,
	142,200,163,147,201,163,205,199,163,
	205,199,164,18,202,164,61,196,164,
	147,201,165,78,203,165,18,202,165,
	49,204,166,206,205,166,147,201,166,
	206,205,167,50,192,167,148,190,167,
	78,203,168,148,190,168,17,187,168,
	76,206,169,142,200,169,16,198,169,
	76,206,170,145,207,170,207,208,170,
	207,208,171,51,209,171,149,210,171,
	207,208,172,49,204,172,142,200,172,
	149,210,173,143,211,173,49,204,173,
	149,210,174,146,212,174,208,213,174,
	146,212,175,150,194,175,208,213,175,
	143,211,176,150,194,176,50,192,176,
	15,8,177,209,214,177,145,207,177,
	75,7,178,79,215,178,209,214,178,
	209,214,179,19,216,179,151,217,179,
	145,207,180,151,217,180,51,209,180,
	51,209,181,210,218,181,146,212,181,
	151,217,182,80,219,182,210,218,182,
	80,219,183,152,9,183,210,218,183,
	210,218,184,52,11,184,146,212,184,
	9,220,185,211,221,185,69,222,185,
	160,223,186,153,224,186,211,221,186,
	211,221,187,16,198,187,60,195,187,
	69,222,188,60,195,188,3,197,188,
	54,225,189,212,226,189,153,224,189,
	56,3,190,212,226,190,162,227,190,
	156,2,191,76,206,191,212,226,191,
	153,224,192,76,206,192,16,198,192,
	71,228,193,57,229,193,1,230,193,
	11,231,194,213,232,194,71,228,194,
	154,233,195,159,234,195,213,232,195,
	213,232,196,10,235,196,57,229,196,
	159,234,197,70,236,197,10,235,197,
	53,237,198,214,238,198,159,234,198,
	214,238,199,54,225,199,160,223,199,
	70,236,200,160,223,200,9,220,200,
	72,239,201,154,233,201,11,231,201,
	72,239,202,157,240,202,215,241,202,
	215,241,203,55,242,203,161,243,203,
	215,241,204,53,237,204,154,233,204,
	161,243,205,155,244,205,53,237,205,
	161,243,206,158,245,206,216,246,206,
	158,245,207,162,227,207,216,246,207,
	155,244,208,162,227,208,54,225,208,
	12,247,209,217,248,209,157,240,209,
	58,249,210,73,250,210,217,248,210,
	217,248,211,13,251,211,163,252,211,
	157,240,212,163,252,212,55,242,212,
	55,242,213,218,253,213,158,245,213,
	163,252,214,74,254,214,218,253,214,
	74,254,215,164,1,215,218,253,215,
	218,253,216,56,3,216,158,245,216,
	164,1,217,165,5,217,156,2,217,
	14,4,218,59,6,218,165,5,218,
	59,6,219,4,255,219,75,7,219,
	165,5,220,75,7,220,15,8,220,
	152,9,221,166,13,221,144,10,221,
	20,12,222,62,14,222,166,13,222,
	62,14,223,8,61,223,81,15,223,
	166,13,224,81,15,224,21,16,224,
	140,17,225,167,21,225,132,18,225,
	26,20,226,65,22,226,167,21,226,
	65,22,227,6,54,227,87,23,227,
	167,21,228,87,23,228,27,24,228,
	128,25,229,168,29,229,120,26,229,
	32,28,230,68,30,230,168,29,230,
	68,30,231,2,256,231,58,31,231,
	168,29,232,58,31,232,12,32,232,
	116,33,233,169,37,233,108,34,233,
	23,36,234,83,38,234,169,37,234,
	83,38,235,5,139,235,67,39,235,
	169,37,236,67,39,236,30,40,236,
	104,41,237,170,45,237,96,42,237,
	13,44,238,73,46,238,170,45,238,
	73,46,239,2,257,239,68,47,239,
	170,45,240,68,47,240,32,48,240,
	26,20,241,100,50,241,171,49,241,
	100,50,242,34,55,242,93,51,242,
	171,49,243,93,51,243,31,52,243,
	65,22,244,171,49,244,91,53,244,
	34,55,245,102,57,245,172,56,245,
	36,43,246,96,42,246,172,56,246,
	96,42,247,32,48,247,92,58,247,
	93,51,248,172,56,248,92,58,248,
	62,59,249,173,63,249,85,60,249,
	20,62,250,94,64,250,173,63,250,
	94,64,251,33,68,251,99,65,251,
	173,63,252,99,65,252,25,66,252,
	99,65,253,174,69,253,86,67,253,
	33,68,254,95,75,254,174,69,254,
	174,69,255,95,75,255,34,55,255,
	86,67,256,174,69,256,100,50,256,
	80,70,257,175,72,257,94,64,257,
	80,70,258,19,78,258,97,71,258,
	175,72,259,97,71,259,35,73,259,
	175,72,260,101,74,260,33,68,260,
	101,74,261,176,77,261,95,75,261,
	101,74,262,35,73,262,98,76,262,
	98,76,263,36,43,263,102,57,263,
	95,75,264,176,77,264,102,57,264,
	19,78,265,79,80,265,177,79,265,
	79,80,266,4,258,266,59,81,266,
	177,79,267,59,81,267,14,82,267,
	97,71,268,177,79,268,103,83,268,
	35,73,269,103,83,269,178,84,269,
	103,83,270,14,82,270,74,85,270,
	74,85,271,13,44,271,104,41,271,
	178,84,272,104,41,272,36,43,272,
	10,86,273,112,89,273,179,87,273,
	112,89,274,38,94,274,105,90,274,
	179,87,275,105,90,275,29,91,275,
	57,88,276,179,87,276,89,92,276,
	38,94,277,114,96,277,180,95,277,
	40,35,278,108,34,278,180,95,278,
	108,34,279,30,40,279,90,97,279,
	105,90,280,180,95,280,90,97,280,
	61,98,281,181,102,281,69,99,281,
	18,101,282,106,103,282,181,102,282,
	106,103,283,37,107,283,111,104,283,
	181,102,284,111,104,284,9,105,284,
	111,104,285,182,108,285,70,106,285,
	37,107,286,107,114,286,182,108,286,
	182,108,287,107,114,287,38,94,287,
	70,106,288,182,108,288,112,89,288,
	78,109,289,183,111,289,106,103,289,
	78,109,290,17,117,290,109,110,290,
	183,111,291,109,110,291,39,112,291,
	183,111,292,113,113,292,37,107,292,
	113,113,293,184,116,293,107,114,293,
	113,113,294,39,112,294,110,115,294,
	110,115,295,40,35,295,114,96,295,
	107,114,296,184,116,296,114,96,296,
	17,117,297,77,119,297,185,118,297,
	77,119,298,7,169,298,64,120,298,
	185,118,299,64,120,299,24,121,299,
	109,110,300,185,118,300,115,122,300,
	39,112,301,115,122,301,186,123,301,
	115,122,302,24,121,302,84,124,302,
	84,124,303,23,36,303,116,33,303,
	186,123,304,116,33,304,40,35,304,
	29,125,305,124,128,305,187,126,305,
	124,128,306,42,133,306,117,129,306,
	187,126,307,117,129,307,11,130,307,
	89,127,308,187,126,308,71,131,308,
	42,133,309,126,135,309,188,134,309,
	44,27,310,120,26,310,188,134,310,
	120,26,311,12,32,311,72,136,311,
	117,129,312,188,134,312,72,136,312,
	66,137,313,189,141,313,67,138,313,
	28,140,314,118,142,314,189,141,314,
	118,142,315,41,146,315,123,143,315,
	189,141,316,123,143,316,30,144,316,
	123,143,317,190,147,317,90,145,317,
	41,146,318,119,153,318,190,147,318,
	190,147,319,119,153,319,42,133,319,
	90,145,320,190,147,320,124,128,320,
	88,148,321,191,150,321,118,142,321,
	88,148,322,27,24,322,121,149,322,
	191,150,323,121,149,323,43,151,323,
	191,150,324,125,152,324,41,146,324,
	125,152,325,192,155,325,119,153,325,
	125,152,326,43,151,326,122,154,326,
	122,154,327,44,27,327,126,135,327,
	119,153,328,192,155,328,126,135,328,
	27,24,329,87,23,329,193,156,329,
	87,23,330,6,54,330,91,157,330,
	193,156,331,91,157,331,31,158,331,
	121,149,332,193,156,332,127,159,332,
	43,151,333,127,159,333,194,160,333,
	127,159,334,31,158,334,92,161,334,
	92,161,335,32,28,335,128,25,335,
	194,160,336,128,25,336,44,27,336,
	23,36,337,136,163,337,195,162,337,
	136,163,338,46,165,338,129,164,338,
	195,162,339,129,164,339,28,140,339,
	83,38,340,195,162,340,66,137,340,
	46,165,341,138,167,341,196,166,341,
	48,19,342,132,18,342,196,166,342,
	132,18,343,27,24,343,88,148,343,
	129,164,344,196,166,344,88,148,344,
	63,168,345,197,171,345,64,120,345,
	22,170,346,130,172,346,197,171,346,
	130,172,347,45,174,347,135,173,347,
	197,171,348,135,173,348,24,121,348,
	135,173,349,198,175,349,84,124,349,
	45,174,350,131,181,350,198,175,350,
	198,175,351,131,181,351,46,165,351,
	84,124,352,198,175,352,136,163,352,
	82,176,353,199,178,353,130,172,353,
	82,176,354,21,16,354,133,177,354,
	199,178,355,133,177,355,47,179,355,
	199,178,356,137,180,356,45,174,356,
	137,180,357,200,183,357,131,181,357,
	137,180,358,47,179,358,134,182,358,
	134,182,359,48,19,359,138,167,359,
	131,181,360,200,183,360,138,167,360,
	21,16,361,81,15,361,201,184,361,
	81,15,362,8,61,362,85,60,362,
	201,184,363,85,60,363,25,66,363,
	133,177,364,201,184,364,139,185,364,
	47,179,365,139,185,365,202,186,365,
	139,185,366,25,66,366,86,67,366,
	86,67,367,26,20,367,140,17,367,
	202,186,368,140,17,368,48,19,368,
	17,187,369,148,190,369,203,188,369,
	148,190,370,50,192,370,141,191,370,
	203,188,371,141,191,371,22,170,371,
	77,189,372,203,188,372,63,168,372,
	50,192,373,150,194,373,204,193,373,
	52,11,374,144,10,374,204,193,374,
	144,10,375,21,16,375,82,176,375,
	141,191,376,204,193,376,82,176,376,
	60,195,377,205,199,377,61,196,377,
	16,198,378,142,200,378,205,199,378,
	142,200,379,49,204,379,147,201,379,
	205,199,380,147,201,380,18,202,380,
	147,201,381,206,205,381,78,203,381,
	49,204,382,143,211,382,206,205,382,
	206,205,383,143,211,383,50,192,383,
	78,203,384,206,205,384,148,190,384,
	76,206,385,207,208,385,142,200,385,
	76,206,386,15,8,386,145,207,386,
	207,208,387,145,207,387,51,209,387,
	207,208,388,149,210,388,49,204,388,
	149,210,389,208,213,389,143,211,389,
	149,210,390,51,209,390,146,212,390,
	146,212,391,52,11,391,150,194,391,
	143,211,392,208,213,392,150,194,392,
	15,8,393,75,7,393,209,214,393,
	75,7,394,4,255,394,79,215,394,
	209,214,395,79,215,395,19,216,395,
	145,207,396,209,214,396,151,217,396,
	51,209,397,151,217,397,210,218,397,
	151,217,398,19,216,398,80,219,398,
	80,219,399,20,12,399,152,9,399,
	210,218,400,152,9,400,52,11,400,
	9,220,401,160,223,401,211,221,401,
	160,223,402,54,225,402,153,224,402,
	211,221,403,153,224,403,16,198,403,
	69,222,404,211,221,404,60,195,404,
	54,225,405,162,227,405,212,226,405,
	56,3,406,156,2,406,212,226,406,
	156,2,407,15,8,407,76,206,407,
	153,224,408,212,226,408,76,206,408,
	71,228,409,213,232,409,57,229,409,
	11,231,410,154,233,410,213,232,410,
	154,233,411,53,237,411,159,234,411,
	213,232,412,159,234,412,10,235,412,
	159,234,413,214,238,413,70,236,413,
	53,237,414,155,244,414,214,238,414,
	214,238,415,155,244,415,54,225,415,
	70,236,416,214,238,416,160,223,416,
	72,239,417,215,241,417,154,233,417,
	72,239,418,12,247,418,157,240,418,
	215,241,419,157,240,419,55,242,419,
	215,241,420,161,243,420,53,237,420,
	161,243,421,216,246,421,155,244,421,
	161,243,422,55,242,422,158,245,422,
	158,245,423,56,3,423,162,227,423,
	155,244,424,216,246,424,162,227,424,
	12,247,425,58,249,425,217,248,425,
	58,249,426,2,259,426,73,250,426,
	217,248,427,73,250,427,13,251,427,
	157,240,428,217,248,428,163,252,428,
	55,242,429,163,252,429,218,253,429,
	163,252,430,13,251,430,74,254,430,
	74,254,431,14,4,431,164,1,431,
	218,253,432,164,1,432,56,3,432
];

window.onload = function init() {
    canvas = document.getElementById( "gl-canvas" );
	
	document.getElementById("InputArea").onmousemove = mouseDrag;
	document.getElementById("InputArea").onmousedown = mouseDown;
	document.getElementById("InputArea").onmouseup = mouseUp;

    gl = WebGLUtils.setupWebGL( canvas );
    if ( !gl ) { alert( "WebGL isn't available" ); }

    gl.clearColor( 1.0, 1.0, 1.0, 1.0 );
	
	var program = initShaders( gl, "vertex-shader", "fragment-shader" );
    gl.useProgram( program );
	
	prepareTeapot();
	
	//Prepare vertex buffer
	var vBuffer = gl.createBuffer();
    gl.bindBuffer( gl.ARRAY_BUFFER, vBuffer);
    gl.bufferData( gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);

    var vPosition = gl.getAttribLocation( program, "vPosition");
    gl.vertexAttribPointer( vPosition, 3, gl.FLOAT, false, 0, 0);
    gl.enableVertexAttribArray( vPosition);
	
	//Prepare index buffer
	var iBuffer = gl.createBuffer();
	gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iBuffer);
	gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint8Array(indices), gl.STATIC_DRAW);
	
	//Prepare normal buffer
	var nBuffer = gl.createBuffer();
	gl.bindBuffer(gl.ARRAY_BUFFER, nBuffer);
	gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(flatten(indexedNormals)), gl.STATIC_DRAW);
	
	var norms = gl.getAttribLocation(program, "normal");
	gl.vertexAttribPointer(norms, 3, gl.FLOAT, false, 0, 0);
	gl.enableVertexAttribArray(norms);
	
	//Prepare texture coordinates
	var texCoordBuffer = gl.createBuffer();
	gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);
	gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(flatten(indexedTexCoords)), gl.STATIC_DRAW);
	
	textureAttrLoc = gl.getAttribLocation(program, "texCoord");
	gl.vertexAttribPointer(textureAttrLoc, 2, gl.FLOAT, false, 0, 0);
	gl.enableVertexAttribArray(textureAttrLoc);
	
	//Prepare texture
	var textSize = 64;
    var numRows = 16;
    var numCols = 16;

    var myTexels = new Uint8Array(4*textSize*textSize);
	var oneRad = Math.PI / 180;

    for(var i= 0;i < textSize;++i){
        for(var j= 0;j < textSize;++j){
			var r = Math.abs(Math.sin(i * oneRad) * 255);
			var g = Math.abs(Math.sin(j * oneRad) * 255);
			var b = Math.abs(Math.sin((j - i) * oneRad) * 255);

            myTexels[(4*i*textSize)+(4*j)]=r;
            myTexels[(4*i*textSize)+(4*j)+1]=g;
            myTexels[(4*i*textSize)+(4*j)+2]=b;
            myTexels[(4*i*textSize)+(4*j)+3]=225;
        }
    }
	
	texture = gl.createTexture();
	gl.bindTexture(gl.TEXTURE_2D, texture);
	
	gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, textSize, textSize, 0, gl.RGBA, gl.UNSIGNED_BYTE, myTexels);
	gl.generateMipmap(gl.TEXTURE_2D);
	
	var samplerLoc = gl.getUniformLocation(program, "sampler");
	gl.uniform1i(samplerLoc, 0);
	
	//modelViewMatrix = rotateX(-90);
	modelViewMatrix = rotateX(-90);
	projectionMatrix = ortho(-5.0, 5.0, -5.0, 5.0, -20.0, 20.0);
	//projectionMatrix = perspective(60.0, 1.0, -10.0, 1000.0);
	
	modelViewMatrixLoc = gl.getUniformLocation( program, "modelViewMatrix" );
    projectionMatrixLoc = gl.getUniformLocation( program, "projectionMatrix" );

    gl.uniformMatrix4fv( modelViewMatrixLoc, false, flatten(modelViewMatrix));
	gl.uniformMatrix4fv( projectionMatrixLoc, false, flatten(projectionMatrix));
	
	//Normal matrix
	//normalMatrix = new Float32Array(16);
	normalMatrix = transpose(inverse(modelViewMatrix));
	normalMatrixLoc = gl.getUniformLocation(program, "normalMatrix");
	gl.uniformMatrix4fv(normalMatrixLoc, false, flatten(normalMatrix));
	
	
	//Material properties
	var ambientReflectionLoc = gl.getUniformLocation(program, "Ka");
	var diffuseReflectionLoc = gl.getUniformLocation(program, "Kd");
	var specularReflectionLoc = gl.getUniformLocation(program, "Ks");
	var shininess = gl.getUniformLocation(program, "shininessVal");
	
	ambM = 0.4;
	difM = 1.0;
	specM = 1.0;
	shinM = 50.0
	
	gl.uniform1f(ambientReflectionLoc, ambM);
	gl.uniform1f(diffuseReflectionLoc, difM);
	gl.uniform1f(specularReflectionLoc, specM);
	gl.uniform1f(shininess, shinM);
	
	//Color properties
	var ambientColorLoc = gl.getUniformLocation(program, "ambientColor");
	var diffuseColorLoc = gl.getUniformLocation(program, "diffuseColor");
	var specularColorLoc = gl.getUniformLocation(program, "specularColor");
	
	ambColor = vec3(200 / 255, 214 / 255, 229 / 255);
	difColor = vec3(254 / 255, 202 / 255, 87 / 255);
	specColor = vec3(1.0, 1.0, 1.0);
	
	gl.uniform3fv(ambientColorLoc, ambColor);
	gl.uniform3fv(diffuseColorLoc, difColor);
	gl.uniform3fv(specularColorLoc, specColor);
	
	//Light properties
	lightPosLoc = gl.getUniformLocation(program, "lightPos");
	
	lightPos = vec3(0.0, 1.0, 2.0);
	
	gl.uniform3fv(lightPosLoc, lightPos);
	
	//Inputs
	document.getElementById("rotS").oninput = function()
	{
		var v = document.getElementById("rotS").value;
		
		rotO = v;
	}
	document.getElementById("shininess").oninput = function()
	{
		var v = document.getElementById("shininess").value;
		
		shinM = v;
		gl.uniform1f(shininess, shinM);
	}
	document.getElementById("ambColor").oninput = function()
	{
		var v = document.getElementById("ambColor").value;
		
		var r = parseInt(v.slice(1,3), 16);
		var g = parseInt(v.slice(3,5), 16);
		var b = parseInt(v.slice(5,7), 16);
		
		ambColor[0] = r / 255;
		ambColor[1] = g / 255;
		ambColor[2] = b / 255;
		
		gl.uniform3fv(ambientColorLoc, ambColor);
	}
	document.getElementById("ambMult").oninput = function()
	{
		ambM = document.getElementById("ambMult").value / 100;
		
		gl.uniform1f(ambientReflectionLoc, ambM);
	}
	document.getElementById("diffColor").oninput = function()
	{
		var v = document.getElementById("diffColor").value;
		
		var r = parseInt(v.slice(1,3), 16);
		var g = parseInt(v.slice(3,5), 16);
		var b = parseInt(v.slice(5,7), 16);
		
		difColor[0] = r / 255;
		difColor[1] = g / 255;
		difColor[2] = b / 255;
		
		gl.uniform3fv(diffuseColorLoc, difColor);
	}
	document.getElementById("difMult").oninput = function()
	{
		difM = document.getElementById("difMult").value / 100;
		
		gl.uniform1f(diffuseReflectionLoc, difM);
	}
	document.getElementById("specColor").oninput = function()
	{
		var v = document.getElementById("specColor").value;
		
		var r = parseInt(v.slice(1,3), 16);
		var g = parseInt(v.slice(3,5), 16);
		var b = parseInt(v.slice(5,7), 16);
		
		specColor[0] = r / 255;
		specColor[1] = g / 255;
		specColor[2] = b / 255;
		
		gl.uniform3fv(specularColorLoc, specColor);
	}
	document.getElementById("specMult").oninput = function()
	{
		specM = document.getElementById("specMult").value / 100;
		
		gl.uniform1f(specularReflectionLoc, specM);
	}
	document.getElementById("wireframe").onchange = function()
	{
		showW = document.getElementById("wireframe").checked;
		
		if(showW)
		{
			gl.uniform3f(ambientColorLoc, 0.0, 0.0, 0.0);
			gl.uniform3f(diffuseColorLoc, 0.0, 0.0, 0.0);
			gl.uniform3f(specularColorLoc, 0.0, 0.0, 0.0);
			
			gl.depthFunc(gl.ALWAYS);
		}
		else
		{
			gl.uniform3fv(ambientColorLoc, ambColor);
			gl.uniform3fv(diffuseColorLoc, difColor);
			gl.uniform3fv(specularColorLoc, specColor);
			
			gl.depthFunc(gl.LEQUAL);
		}
	}
	
	gl.enable(gl.DEPTH_TEST);
	
	render();
};

// This function goes over the given teapot data and 
// does the necessary index organization tasks.
// The main task is to convert the given polygons (quads and triangles)
// into a single indices array correctly
function prepareTeapot() {
	for (var i = 0; i < triangles.length; i+=9) {
		indices.push(triangles[i]-1, triangles[i+3]-1, triangles[i+6]-1); 
	}
	
	//Recalculate normals
	var vertLength = vertices.length / 3;
	indexedNormals = new Array(vertLength).fill(vec3(0,0,0));
	//console.log("Len: " + indexedNormals.length + " vertL: " + vertLength);
	for(var i = 2; i < triangles.length; i+=3)
	{
		var selectedNorm = (triangles[i] - 1) * 3;
		
		var normal = vec3(normals[selectedNorm], normals[selectedNorm + 1], normals[selectedNorm + 2]);
		
		if(indexedNormals[triangles[i - 2] - 1] == undefined)
			indexedNormals[triangles[i - 2] - 1] = normal;
		else
			indexedNormals[triangles[i - 2] - 1] = add(normal, indexedNormals[triangles[i - 2] - 1]);
	}
	
	//Normalize normals
	for(var i = 0; i < indexedNormals.length; i++)
	{
		indexedNormals[i] = normalize(indexedNormals[i]);
		//console.log("[" + i + "]: " + indexedNormals[i]);
	}
	
	//Recalculate texcoords
	indexedTexCoords = new Array(vertLength);
	for(var i = 1; i < triangles.length; i+=3)
	{
		var selectedTexc = (triangles[i] - 1) * 2;
		
		var texCoordinate = vec2(texcoords[selectedTexc], texcoords[selectedTexc + 1]);
		
		if(indexedTexCoords[triangles[i - 1] - 1] == undefined)
			indexedTexCoords[triangles[i - 1] - 1] = texCoordinate;
	}
}

function render() {

    gl.clear(gl.COLOR_BUFFER_BIT);

	if(showW)
	{
		for( var i=0; i<indices.length; i+=3)
		   gl.drawElements( gl.LINE_STRIP, 3, gl.UNSIGNED_BYTE, i );		
	}
	else
	{
		for( var i=0; i<indices.length; i+=3)
		   gl.drawElements( gl.TRIANGLE_STRIP, 3, gl.UNSIGNED_BYTE, i );	
	}
	
	requestAnimationFrame(render);
}